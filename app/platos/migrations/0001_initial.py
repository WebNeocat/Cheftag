# Generated by Django 5.0 on 2025-08-13 01:52

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dashuser', '0004_remove_informacionnutricional_centro'),
        ('super', '0002_userprofile'),
    ]

    operations = [
        migrations.CreateModel(
            name='Plato',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('imagen', models.ImageField(blank=True, null=True, upload_to='platos/')),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('centro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super.centros')),
            ],
            options={
                'verbose_name': 'Plato',
                'verbose_name_plural': 'Platos',
            },
        ),
        migrations.CreateModel(
            name='Receta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tiempo_preparacion', models.PositiveIntegerField(verbose_name='Tiempo de preparación (minutos)')),
                ('tiempo_coccion', models.PositiveIntegerField(verbose_name='Tiempo de cocción (minutos)')),
                ('rendimiento', models.PositiveIntegerField(default=1, verbose_name='Número de porciones')),
                ('instrucciones', models.TextField(verbose_name='Instrucciones paso a paso')),
                ('centro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super.centros')),
                ('plato', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='platos.plato')),
            ],
            options={
                'verbose_name': 'Receta',
                'verbose_name_plural': 'Recetas',
                'ordering': ['plato__nombre'],
            },
        ),
        migrations.CreateModel(
            name='TipoPlato',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('estado', models.BooleanField(default=True)),
                ('centro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super.centros')),
            ],
            options={
                'verbose_name': 'Tipo de Plato',
                'verbose_name_plural': 'Tipos de Platos',
                'unique_together': {('nombre', 'centro')},
            },
        ),
        migrations.AddField(
            model_name='plato',
            name='tipoplato',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='platos.tipoplato'),
        ),
        migrations.CreateModel(
            name='AlimentoPlato',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.DecimalField(decimal_places=2, max_digits=10)),
                ('notas', models.TextField(blank=True, null=True)),
                ('alimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashuser.alimento')),
                ('centro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='super.centros')),
                ('plato', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredientes', to='platos.plato')),
            ],
            options={
                'verbose_name': 'Ingrediente de Plato',
                'verbose_name_plural': 'Ingredientes de Plato',
                'unique_together': {('plato', 'alimento')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='plato',
            unique_together={('nombre', 'centro')},
        ),
    ]
